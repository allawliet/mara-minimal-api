@page "/"
@page "/home"
@using mara.Web.Services
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation

<PageTitle>Home</PageTitle>

@if (isLoading)
{
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p>Checking authentication...</p>
    </div>
}
else if (isAuthenticated)
{
    <h1>Hello, world!</h1>
    <p>Welcome to your new app, @authState.Username!</p>
}
else
{
    <div class="text-center">
        <h3>Access Denied</h3>
        <p>You need to be logged in to access this page.</p>
        <a href="/login" class="btn btn-primary">Go to Login</a>
    </div>
}

@code {
    private bool isLoading = true;
    private bool isAuthenticated = false;
    private mara.Web.Services.AuthenticationState authState = new();

    protected override async Task OnInitializedAsync()
    {
        // Add a small delay to ensure services are initialized
        await Task.Delay(100);
        
        // Check authentication state
        authState = AuthService.GetAuthenticationState();
        isAuthenticated = authState.IsAuthenticated;
        isLoading = false;
        
        // If not authenticated, redirect after a moment
        if (!isAuthenticated)
        {
            await Task.Delay(1000); // Give user time to see the message
            Navigation.NavigateTo("/login");
        }
        
        StateHasChanged();
    }
}
